[{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement Taylor Rodgers. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Lee Mason, Alonzo Andrews, Taylor Rodgers Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"vox-analysis","dir":"Articles","previous_headings":"","what":"VOX Analysis","title":"Data & Package Definitions","text":"Verbal Operant Experimental Analysis assesses language development balance speaker help identify autism spectrum disorder. process, listener records responses verbal episodes (often play therapy). recordings entered VOX Analysis Application, runs measurements generates data visualizations evaluate language development balance.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"vox-analysis-application","dir":"Articles","previous_headings":"","what":"VOX Analysis Application","title":"Data & Package Definitions","text":"R Shiny application included voxanalysis package. Users without R programming experience can use application record evaluation results generate reports.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"evaluation","dir":"Articles","previous_headings":"","what":"Evaluation","title":"Data & Package Definitions","text":"play therapy session listener engages speaker elicit responses.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"speaker","dir":"Articles","previous_headings":"","what":"Speaker","title":"Data & Package Definitions","text":"subject VOX Analysis, undergoing evaluation autism spectrum disorder.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"listener","dir":"Articles","previous_headings":"","what":"Listener","title":"Data & Package Definitions","text":"individual interacts speaker evaluation. may behavioral analyst, therapist, clinician trained conduct evaluation.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"user","dir":"Articles","previous_headings":"","what":"User","title":"Data & Package Definitions","text":"individual using VOX Analysis Application functions within voxanalysis package.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"referrant","dir":"Articles","previous_headings":"","what":"Referrant","title":"Data & Package Definitions","text":"object listener interacts analysis, typically toy.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"response-type","dir":"Articles","previous_headings":"","what":"Response Type","title":"Data & Package Definitions","text":"Also known (verbal operant), type response, commonly abbreviated “CLEaR,” stands : Conversing: speaker’s ability engage conversation listener. instance, listener might prompt speaker finish sentence (e.g., “eat …”) answer question (e.g., “eat?”). Labeling: speaker’s ability name object. example, listener might ask speaker identify referent (e.g., “holding?”). Echoing: speaker’s ability repeat phrase spoken listener. listener might prompt speaker echo word (e.g., “Say ‘apple’…”). Requesting: speaker’s ability ask something. listener might remove referent prompt speaker request back.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"response","dir":"Articles","previous_headings":"","what":"Response","title":"Data & Package Definitions","text":"binary indicator (1 0) denoting whether speaker responded listener’s prompt given response type.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datadefinitions.html","id":"verbal-episode","dir":"Articles","previous_headings":"","what":"Verbal Episode","title":"Data & Package Definitions","text":"time period within evaluation three referents available speaker elicit responses based CLEaR response types. evaluation includes 2–4 verbal episodes.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datamodel.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data Structure Guidelines","text":"voxanalysis package relies standardized data sets power VOX Analysis application, well supporting calculations data visualizations. four specific data sets users interact , either directly indirectly. include: Response - Response entries speaker, organized response type, referent, evaluation date. Speaker - General information speaker (name, date birth, etc.). Summary - aggregate Response data set, total count positive responses response type grouped evaluation date. Upload & Export - combination Response Speaker. used application uploading exporting data. VOX Analysis application users (non-R users), Upload & Export data structure familiarize. (can download .csv file example.) application export data follows structure. user wants modify add data directly data set, must ensure follow structure outlined page. Otherwise, application reject attempt upload data set. R users, Response, Summary, Speaker useful data structures familiarize. Nearly every function variance calculations data visualizations use structures. See Data Definitions understand keywords found page.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datamodel.html","id":"responsedata","dir":"Articles","previous_headings":"","what":"Response Data","title":"Data Structure Guidelines","text":"Response data set provides speaker responses evaluation. entry binary indicator (1 0) shows whether speaker responded given referent particular response type. data set may contain multiple evaluations, distinguished date_of_evaluation.   used parameter voxanalysis functions, data set called df_input_response. sample data set can generated : See ?df_input_response_example information.","code":"library(voxanalysis) data(\"df_input_response_example\")"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datamodel.html","id":"speakerdata","dir":"Articles","previous_headings":"","what":"Speaker Data","title":"Data Structure Guidelines","text":"Speaker data set provides key personal information speaker, name date birth.   used parameter voxanalysis functions, data set called df_input_speaker_info. sample data set can generated : See ?df_input_speaker_info_example information.","code":"library(voxanalysis) data(\"df_input_speaker_info_example\")"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datamodel.html","id":"summarizedata","dir":"Articles","previous_headings":"","what":"Summary Data","title":"Data Structure Guidelines","text":"Summary data set provides aggregated total response type (Conversing, Labeling, Echoing, Requesting). totals grouped evaluation date. data set often used input plot functions analyses assess patterns response types time.   used parameter voxanalysis functions, data set called df_summarized_response. summary data set can generated passing df_input_response util_summarize_response function: sample data set can generated : See ?df_summarized_response_example ?util_summarize_response information.","code":"library(voxanalysis)  # Load example data data(\"df_input_response_example\")  # Summarize responses by type util_summarize_response(   df_input_response = df_input_response_example ) library(voxanalysis) data(\"df_summarized_response_example\")"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datamodel.html","id":"dataupload","dir":"Articles","previous_headings":"","what":"Upload & Export Data","title":"Data Structure Guidelines","text":"Upload & Export data set consolidates information speaker responses. merges Speaker Response data set together, ease--export application user.   Note: application users MUST follow structure modifying .csv downloads. application exports data way can re-uploaded. gives user ability append new data overtime. user modifies column names, column order, adds ill-formatted entries, application reject .csv file user uploads . used parameter voxanalysis functions, data set called df_output_exportable. can also download .csv file example. sample data set can generated : details, see ?df_output_exportable_example.","code":"library(voxanalysis) data(\"df_output_exportable_example\")"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datavizandcharts.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"VOX Visualizations and Metrics","text":"voxanalysis packages provides many distinct data visualizations measures variability assist user diagnosing speaker autism spectrum disorder. user can generate summary report data visualizations measures using Shiny application util_generate_word_doc_report function. Instructions generating report can found . individual data visualizations, tables, measures can generated user R. functions begin prefixes: calc_ plot_ table_","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datavizandcharts.html","id":"area-q-plot","dir":"Articles","previous_headings":"","what":"Area Q Plot","title":"VOX Visualizations and Metrics","text":"user can generate Area Q plot using plot_area_q. See ?plot_area_q documentation.","code":"# Load example data data(\"df_summarized_response_example\")  # Generate an Area Q plot for selected dates plot_area_q(   df_summarized_response = df_summarized_response_example[1:2, ],   date_primary = \"2024-08-23\",   ind_doc_version = FALSE )"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datavizandcharts.html","id":"area-q-metrics","dir":"Articles","previous_headings":"","what":"Area Q Metrics","title":"VOX Visualizations and Metrics","text":"Note: documentation needed Area Q plot can supplemented additional metrics: Centroid, need definition description Centroidal Distance, need definition description Moment Area Q, need definition description two report generation methods provide metrics next Area Q plot. also can generated calc_centroid. See ?calc_centroid documentation.","code":"data(\"df_input_response_example\") calc_centroid(df_input_response = df_input_response_example) #> $centroid #> [1]  1.33 -2.67 #>  #> $distance #> [1] 3 #>  #> $moment #> [1] 648"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datavizandcharts.html","id":"vox-line-chart","dir":"Articles","previous_headings":"","what":"VOX Line Chart","title":"VOX Visualizations and Metrics","text":"Note: documentation needed See ?plot_vox_line documentation.","code":"# Load example data data(\"df_input_response_example\")  # Generate a VOX line chart across verbal episodes plot_vox_line(   df_input_response = df_input_response_example,   ind_hide_heading = FALSE,   ind_doc_version = FALSE)"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datavizandcharts.html","id":"vox-pie-chart","dir":"Articles","previous_headings":"","what":"VOX Pie Chart","title":"VOX Visualizations and Metrics","text":"Note: documentation needed See ?plot_vox_piechart documentation.","code":"# Load example data library(dplyr) data(\"df_summarized_response_example\")  # Filter to a single evaluation date, as the pie chart works with one date at a time dat <- df_summarized_response_example %>%     filter(date_of_evaluation == max(date_of_evaluation))  # Generate the VOX pie chart plot_vox_piechart(   df_summarized_response = dat,   ind_doc_version = FALSE)"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datavizandcharts.html","id":"speakers-score","dir":"Articles","previous_headings":"","what":"Speaker’s SCoRE","title":"VOX Visualizations and Metrics","text":"Note: documentation needed Speaker’s SCoRE often paired pie chart, particularly summary reports. See ?calc_speakers_score documentation.","code":"library(dplyr) data(\"df_summarized_response_example\")  # Filter the data to a single evaluation date for accurate SCoRE calculation dat <- df_summarized_response_example %>%   filter(date_of_evaluation == max(date_of_evaluation))  # Calculate the Speaker's SCoRE calc_speakers_SCoRE(df_summarized_response = dat) #> [1] 0.6"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datavizandcharts.html","id":"cochrans-q-test-table","dir":"Articles","previous_headings":"","what":"Cochran’s Q Test Table","title":"VOX Visualizations and Metrics","text":"Note: documentation needed See ?table_cochrans_q_test documentation.","code":"# Load example response data data(\"df_input_response_example\")  # Generate a summary table with Cochran's Q test and supporting statistics table_cochrans_q_test(df_input_response = df_input_response_example) #>                label  value #> 1        Cochran's Q 7.5000 #> 2 Chance-corrected R 0.1875 #> 3            P-value 0.0600"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/datavizandcharts.html","id":"hierarchy-table","dir":"Articles","previous_headings":"","what":"Hierarchy Table","title":"VOX Visualizations and Metrics","text":"Note: documentation needed See ?table_prompt_hieararchy documentation.","code":"# Load example data library(dplyr) data(\"df_summarized_response_example\")  # Filter to a single evaluation date, as the table works with one date at a time dat <- df_summarized_response_example %>%     filter(date_of_evaluation == max(date_of_evaluation))  # Generate the prompt hierarchy table table_prompt_hierarchy(df_summarized_response = dat) #> # A tibble: 14 × 5 #>    Percent Conversing Labeling Echoing Requesting #>      <dbl> <chr>      <chr>    <chr>   <chr>      #>  1   100   CELR       LERC     ELRC    RELC       #>  2    91.7 -          LER      ELR     REL        #>  3    83.3 CEL        LEC      ELC     -          #>  4    75   -          LE       EL      -          #>  5    66.7 CER        -        ERC     REC        #>  6    58.4 -          -        ER      RE         #>  7    58.3 CLR        LRC      -       RLC        #>  8    50   CE         LR       EC      RL         #>  9    41.7 -          -        E       -          #> 10    41.6 CL         LC       -       -          #> 11    33.3 -          L        -       -          #> 12    25   CR         -        -       RC         #> 13    16.7 -          -        -       R          #> 14     8.3 C          -        -       -"},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/generatingreports.html","id":"r-shiny-application","dir":"Articles","previous_headings":"","what":"R Shiny Application","title":"How to Generate Shiny Report","text":"launch application, simply run: voxanalysis::run_app(). launch home screen :","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/generatingreports.html","id":"select-data-upload-method","dir":"Articles","previous_headings":"R Shiny Application","what":"Select Data Upload Method","title":"How to Generate Shiny Report","text":"first menu let’s decide enter speaker’s data. three options: Type new data, means manually type speaker info response data evaluation. Upload .csv file, allows re-run report previously exported data. also useful want generate report data filled .csv. , useful want append speaker’s data new responses.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/generatingreports.html","id":"provide-speaker-info","dir":"Articles","previous_headings":"R Shiny Application","what":"Provide Speaker Info","title":"How to Generate Shiny Report","text":"Provide Speaker Info prompt asking speaker’s information, first name, last name, birth date, evaluation date. Language spoken gender optional. speaker information entered prompt appear Word Doc .csv exports.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/generatingreports.html","id":"upload-data-set","dir":"Articles","previous_headings":"R Shiny Application","what":"Upload Data Set","title":"How to Generate Shiny Report","text":"Upload Data Set prompt appears user indicated wanted upload data set.  user may also upload data set, provided follows data model guidelines. can also download .csv file example. user uploaded .csv file, option modify speaker info.  user previous select option add new data, can select Download Report Word Doc select Show Report see report within web application. Otherwise, can hit Continue move onto Provide Speaker Responses prompt.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/generatingreports.html","id":"provide-evaluation-date","dir":"Articles","previous_headings":"R Shiny Application","what":"Provide Evaluation Date","title":"How to Generate Shiny Report","text":"user chooses append existing .csv file new data must specify evaluation date new response entries. ensure report can tell responses analyzed together separately, based date.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/generatingreports.html","id":"provide-speaker-responses","dir":"Articles","previous_headings":"R Shiny Application","what":"Provide Speaker Responses","title":"How to Generate Shiny Report","text":"Provide Speaker Responses prompt asks user number referents (.e., toys) used evaluation. change number rows found input table . user need provide unique referent names responses (1 = Positive Response, 0 = Response) referents based verbal operant (CLEaR).","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/articles/generatingreports.html","id":"results-summary-page","dir":"Articles","previous_headings":"R Shiny Application","what":"Results Summary Page","title":"How to Generate Shiny Report","text":"Results Summary Page provides VOX Analysis results speakers responses user provided. user option Download Report download Word Doc version, can select Save Data, allows download data set previously entered. Note: Exporting data set Results Summary page ensures data structured way can re-uploaded, re-analyzed, appended future.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Taylor Rodgers. Author, maintainer. Lee Mason. Author, copyright holder. Alonzo Andrews. Contributor.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rodgers T, Mason L (2025). voxanalysis: VOX Analysis. R package version 0.0.0.9000, https://free-state-analytics.github.io/voxanalysis/.","code":"@Manual{,   title = {voxanalysis: VOX Analysis},   author = {Taylor Rodgers and Lee Mason},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://free-state-analytics.github.io/voxanalysis/}, }"},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"vox-analysis-application--package","dir":"","previous_headings":"","what":"VOX Analysis Application & Package","title":"VOX Analysis","text":"voxanalysis package enables behavioral specialists generate detailed reports analyses using VOX Analysis framework, designed assess language development individuals autism.    Developed Dr. Lee Mason Dr. Alonzo Andrews, co-founders Shapers Work, voxanalysis rooted expertise verbal behavior autism diagnosis. Shapers Work consulting firm dedicated training specialists behavioral analysis autism assessment. (Read VOX Analysis process .)","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"austism-and-vox-analysis","dir":"","previous_headings":"VOX Analysis Application & Package","what":"Austism and VOX Analysis","title":"VOX Analysis","text":"Autism spectrum disorder often presents unique language development patterns. instance, individual autism may excel requesting object struggle responding questions. contrast, people without autism typically exhibit balanced language skills, abilities like requesting responding evenly developed. VOX Analysis leverages -person evaluations (e.g., play therapy) measure variations development. evaluations, clinician (“listener”) elicits verbal responses individual (“speaker”). documenting interactions, clinicians can use voxanalysis produce comprehensive reports, complete data visualizations variance measures, offer insights speaker’s language skills patterns.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"VOX Analysis","text":"user can install voxanalysis :","code":"devtools::install_github(\"Free-State-Analytics/voxanalysis\")"},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"running-reports","dir":"","previous_headings":"","what":"Running Reports","title":"VOX Analysis","text":"easiest way generate report using VOX Analysis Application, Shiny app included {voxanalysis}. launch application, run: users familiar R, voxanalysis also supports generating report MS Word format. learn report generation, refer Generate Reports guide.","code":"voxanalysis::run_app() # Load example data for report generation data(\"df_input_speaker_info_example\") data(\"df_input_response_example\")  # Generate a Word document report util_generate_word_doc_report(   df_input_speaker_info = df_input_speaker_info_example,   df_input_response = df_input_response_example,   file_name = \"text.docx\" )"},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"data-visualizations-and-individual-metrics","dir":"","previous_headings":"","what":"Data Visualizations and Individual Metrics","title":"VOX Analysis","text":"Advanced R users can use individual functions within voxanalysis data visualizations calculations. components designed allow flexible analysis beyond main VOX Analysis Application. example, line chart tracks language skill balance verbal episodes can generated :    details available visualization metric functions, see VOX Visualizations Metrics.","code":"library(voxanalysis)  # Load example data data(\"df_input_response_example\")  # Generate a VOX line chart across verbal episodes plot_vox_line(   df_input_response = df_input_response_example,   ind_hide_heading = FALSE   )"},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"about-the-team","dir":"","previous_headings":"","what":"About the Team","title":"VOX Analysis","text":"voxanalysis package developed Lee Mason, Alonzo Andrews, Taylor Rodgers. partnership respective companies, Shapers Work Free State Analytics.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"dr-lee-mason---vox-analysis-researcher","dir":"","previous_headings":"About the Team","what":"Dr. Lee Mason - VOX Analysis Researcher","title":"VOX Analysis","text":"Dr. Mason behavioral specialist verbal behavior co-founder Shapers Work. [Bio coming soon]","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"dr-alonzo-andrews---vox-analysis-researcher","dir":"","previous_headings":"About the Team","what":"Dr. Alonzo Andrews - VOX Analysis Researcher","title":"VOX Analysis","text":"Dr. Andrews served director Autism Treatment Center San Antonio 24 years, led delivery behavioral services individuals autism spectrum disorders. work included developing residential programs children adults, operating state-certified private school, providing outpatient rehabilitation therapies. Currently, provides behavioral consultation school district San Antonio teaching courses University Texas San Antonio since 2013. Alonzo co-authored numerous publications esteemed journals, including Journal Autism Developmental Disorders, Analysis Verbal Behavior, Behavior Analysis Practice. clinical interests span wide range innovative projects, biomedical interventions, video modeling, remote functional assessments, autism-friendly architectural design, challenging behavior interventions. also worked developing computer-simulation training program caregivers children autism, reflecting commitment advancing research practical applications field.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"taylor-rodgers---project-manager--package-developer","dir":"","previous_headings":"About the Team","what":"Taylor Rodgers - Project Manager & Package Developer","title":"VOX Analysis","text":"Taylor Rodgers R Shiny developer project manager. available R Shiny consulting training. Contact taylor@taylorrodgers.com","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/index.html","id":"training-and-consulting-services","dir":"","previous_headings":"","what":"Training and Consulting Services","title":"VOX Analysis","text":"VOX Analysis Training: Behavioral specialists can contact Lee Mason (leemason@gmail.com) training using VOX Analysis framework. VOX Analysis Setup & Support: assistance setup customization VOX Analysis Application, contact Taylor Rodgers (taylor@taylorrodgers.com).","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_centroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Centroid, Centroidal Distance, and Area Moment (Q) — calc_centroid","title":"Calculate the Centroid, Centroidal Distance, and Area Moment (Q) — calc_centroid","text":"function calculates centroid (geometric center), distance reference point centroid (centroidal distance), area moment (Q) given shape set data points.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_centroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Centroid, Centroidal Distance, and Area Moment (Q) — calc_centroid","text":"","code":"calc_centroid(df_input_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_centroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Centroid, Centroidal Distance, and Area Moment (Q) — calc_centroid","text":"df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_centroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Centroid, Centroidal Distance, and Area Moment (Q) — calc_centroid","text":"`list` following components: centroid numeric vector length 2, providing x y coordinates centroid. represents geometric center input data. distance numeric value representing centroidal distance, distance reference point calculated centroid. moment numeric value area moment (often referred area Q), representing product area distance reference axis.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_centroid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Centroid, Centroidal Distance, and Area Moment (Q) — calc_centroid","text":"","code":"data(\"df_input_response_example\") calc_centroid(df_input_response = df_input_response_example) #> $centroid #> [1]  1.33 -2.67 #>  #> $distance #> [1] 3 #>  #> $moment #> [1] 648 #>"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_chance_corrected.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Chance-Corrected R for Language Assessment — calc_chance_corrected","title":"Calculate the Chance-Corrected R for Language Assessment — calc_chance_corrected","text":"function computes chance-corrected R value, measure used VOX analysis evaluate agreement accounting chance. R value adjusts potential randomness scoring response patterns, providing accurate assessment inter-rater inter-response agreement.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_chance_corrected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Chance-Corrected R for Language Assessment — calc_chance_corrected","text":"","code":"calc_chance_corrected(df_input_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_chance_corrected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Chance-Corrected R for Language Assessment — calc_chance_corrected","text":"df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_chance_corrected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Chance-Corrected R for Language Assessment — calc_chance_corrected","text":"numeric vector containing chance-corrected R value provided data. value can help assess consistency language evaluations controlling chance agreement.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_chance_corrected.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the Chance-Corrected R for Language Assessment — calc_chance_corrected","text":"information chance-corrected measures agreement assessments, see: https://peterstatistics.com/CrashCourse/5-ThreeVarPair/binary/MultipleBinaryPaired3c.html","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_chance_corrected.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Chance-Corrected R for Language Assessment — calc_chance_corrected","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(\"df_input_response_example\") calc_chance_corrected(df_input_response = df_input_response_example) #> [1] 0.1875"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_cochran_qtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Cochran's Q Test for Multiple Response Comparisons — calc_cochran_qtest","title":"Perform Cochran's Q Test for Multiple Response Comparisons — calc_cochran_qtest","text":"function performs Cochran's Q Test, non-parametric test examining differences proportions across multiple related groups. based `RVAideMemoire` package's implementation, adapted avoid external dependencies ensure seamless integration. Cochran's Q Test commonly used repeated measures designs studies binary response data.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_cochran_qtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Cochran's Q Test for Multiple Response Comparisons — calc_cochran_qtest","text":"","code":"calc_cochran_qtest(formula, data, alpha = 0.05, p.method = \"bonferroni\")"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_cochran_qtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Cochran's Q Test for Multiple Response Comparisons — calc_cochran_qtest","text":"formula formula specifying model use test. Typically, format `value ~ name | referent`, `value` binary response variable `name` represents different conditions responses. data `data.frame` containing binary responses verbal operant (e.g., `Conversing`, `Labeling`, `Echoing`, `Requesting`). data transformed `pivot_longer` binary operant names `name` column, responses `value` column. alpha Significance level test (e.g., 0.05). p.method Method p-value adjustment multiple comparisons; VOX analysis uses `bonferroni`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_cochran_qtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Cochran's Q Test for Multiple Response Comparisons — calc_cochran_qtest","text":"`list` containing following components: statistic test statistic Cochran's Q. p.value p-value associated test statistic, adjustment `p.method` specified. ... values returned, used purpose VOX Analysis app.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_cochran_qtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Cochran's Q Test for Multiple Response Comparisons — calc_cochran_qtest","text":"","code":"# Example of Cochran's Q Test using sample response data library(dplyr) library(tidyr) data(\"df_input_response_example\")  dat <- df_input_response_example %>%     select(\"referent\", \"conversing\", \"labeling\", \"echoing\", \"requesting\") %>%    pivot_longer(      cols = c(\"conversing\", \"labeling\", \"echoing\", \"requesting\"),      names_to = \"name\",      values_to = \"value\") %>%      arrange(.data$name) calc_cochran_qtest(   formula = value ~ name | referent,   data = dat,   alpha = 0.05,   p.method = \"bonferroni\" ) #> $method.test #> [1] \"Cochran's Q test\" #>  #> $data.name #> [1] \"value by name, block = referent\" #>  #> $statistic #>   Q  #> 7.5  #>  #> $parameter #> df  #>  3  #>  #> $alternative #> [1] \"two.sided\" #>  #> $null.value #> difference in probabilities  #>                           0  #>  #> $p.value #> [1] 0.05755845 #>  #> $estimate #> proba in group             <NA>            <NA>            <NA>  #>       0.1666667       0.8333333       0.6666667       0.3333333  #>  #> $alpha #> [1] 0.05 #>  #> attr(,\"class\") #> [1] \"RVtest\""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_speakers_SCoRE.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Speaker's SCoRE (Speech Coefficient of Reliability and Engagement) — calc_speakers_SCoRE","title":"Calculate the Speaker's SCoRE (Speech Coefficient of Reliability and Engagement) — calc_speakers_SCoRE","text":"function calculates Speaker's SCoRE, metric used VOX Analysis evaluate balance language development. SCoRE reflects consistency reliability speaker's responses (e.g., Conversing, Labeling, Echoing, Requesting) within evaluation session. score aids listener user analyzing speaker's engagement verbal operant verbal episodes.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_speakers_SCoRE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Speaker's SCoRE (Speech Coefficient of Reliability and Engagement) — calc_speakers_SCoRE","text":"","code":"calc_speakers_SCoRE(df_summarized_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_speakers_SCoRE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Speaker's SCoRE (Speech Coefficient of Reliability and Engagement) — calc_speakers_SCoRE","text":"df_summarized_response `data.frame` summarizing verbal operant (Conversing, Labeling, Echoing, Requesting) given evaluation date. summary provides condensed view responses can produced using `util_summarize_response` function.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_speakers_SCoRE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Speaker's SCoRE (Speech Coefficient of Reliability and Engagement) — calc_speakers_SCoRE","text":"numeric vector containing SCoRE values, representing degree language engagement response reliability across verbal episodes.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/calc_speakers_SCoRE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Speaker's SCoRE (Speech Coefficient of Reliability and Engagement) — calc_speakers_SCoRE","text":"","code":"library(dplyr) data(\"df_summarized_response_example\")  # Filter the data to a single evaluation date for accurate SCoRE calculation dat <- df_summarized_response_example %>%   filter(date_of_evaluation == max(date_of_evaluation))  # Calculate the Speaker's SCoRE calc_speakers_SCoRE(df_summarized_response = dat) #> [1] 0.6"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/common-params.html","id":null,"dir":"Reference","previous_headings":"","what":"Common Parameters for VOX Analysis Functions — common-params","title":"Common Parameters for VOX Analysis Functions — common-params","text":"collection common parameters used throughout VOX Analysis package, specifically designed facilitate analysis visualization language development verbal operant assessment.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/common-params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common Parameters for VOX Analysis Functions — common-params","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`. df_summarized_response `data.frame` summarizing verbal operant (Conversing, Labeling, Echoing, Requesting) given evaluation date. summary provides condensed view responses can produced using `util_summarize_response` function. df_input_response_previous `data.frame` similar `df_summarized_response` represents past evaluations uploaded end user distinguish prior assessments current ones. df_input_speaker_info `data.frame` containing general information speaker (subject VOX Analysis), provided user. example, run `data(\"df_input_speaker_info\")`. date_primary single date `vector` specifying primary evaluation date. parameter essential multiple evaluation dates available, determines date prioritized calculations highlights within function. ind_doc_version Logical (`TRUE` `FALSE`): Indicates whether plot needs optimized inclusion Word document. `TRUE`, font sizes aesthetics adjusted enhance Word document readability. ind_add_new_data Logical (`TRUE` `FALSE`): Indicates whether user intends manually enter new data. Setting `TRUE` triggers inclusion `mod_speaker_data_entry` module, enabling manual data entry user.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_response_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Speaker Response Inputs (Example Data) — df_input_response_example","title":"Speaker Response Inputs (Example Data) — df_input_response_example","text":"data set provides example structure `df_input_response`, core data frame VOX Analysis process used record speaker responses language assessments. entry binary indicator (1 0) denotes whether speaker responded given referent across different verbal operants.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_response_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speaker Response Inputs (Example Data) — df_input_response_example","text":"","code":"data(df_input_response_example)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_response_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Speaker Response Inputs (Example Data) — df_input_response_example","text":"data frame 7 rows 6 variables: date_of_evaluation date evaluation took place. referent name referent associated response, representing object entity involved verbal episode. conversing Binary indicator showing speaker provided conversational response referent (1 = Yes, 0 = ). labeling Binary indicator showing speaker label referent (1 = Yes, 0 = ). echoing Binary indicator showing speaker repeat referent's name (1 = Yes, 0 = ). requesting Binary indicator showing speaker request referent's name (1 = Yes, 0 = ).","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_response_previous_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Previous Response Inputs (Example Data) — df_input_response_previous_example","title":"Previous Response Inputs (Example Data) — df_input_response_previous_example","text":"sample data set similar `df_input_response_example` includes two previous sets evaluations. serves example generating plots analyses compare current responses past evaluation dates, offering insights speaker's language development time. entry binary indicator (1 0), representing whether speaker responded specific referent verbal operant.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_response_previous_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Previous Response Inputs (Example Data) — df_input_response_previous_example","text":"","code":"data(df_input_response_previous_example)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_response_previous_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Previous Response Inputs (Example Data) — df_input_response_previous_example","text":"data frame 7 rows 6 variables: date_of_evaluation date evaluation conducted. referent name referent associated response, representing object entity involved verbal episode. conversing Binary indicator showing speaker provided conversational response referent (1 = Yes, 0 = ). labeling Binary indicator showing speaker label referent (1 = Yes, 0 = ). echoing Binary indicator showing speaker repeat referent's name (1 = Yes, 0 = ). requesting Binary indicator showing speaker request referent's name (1 = Yes, 0 = ).","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_speaker_info_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Speaker Information (Example Data) — df_input_speaker_info_example","title":"Speaker Information (Example Data) — df_input_speaker_info_example","text":"data set provides example structure `df_input_speaker_info`, required input data frame used across various functions package. contains essential information speaker, including personal details evaluation context.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_speaker_info_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speaker Information (Example Data) — df_input_speaker_info_example","text":"","code":"data(df_input_speaker_info_example)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_input_speaker_info_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Speaker Information (Example Data) — df_input_speaker_info_example","text":"data frame 1 row 6 variables: first_name speaker's first name. last_name speaker's last name. date_of_birth date birth speaker. date_of_evaluation date evaluation conducted. language_spoken primary language spoken speaker evaluation. gender speaker's gender.","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_output_exportable_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Data Structure (Example) — df_output_exportable_example","title":"Export Data Structure (Example) — df_output_exportable_example","text":"data set represents structure required exporting evaluation data. data re-imported application append new records must follow format ensure compatibility accurate processing.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_output_exportable_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Data Structure (Example) — df_output_exportable_example","text":"","code":"data(df_output_exportable_example)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_output_exportable_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Export Data Structure (Example) — df_output_exportable_example","text":"data frame 11 columns: first_name speaker's first name. last_name speaker's last name. date_of_birth speaker's date birth. language_spoken language spoken speaker evaluation. gender speaker's gender. date_of_evaluation date evaluation conducted. referent name referent associated response, representing object entity involved verbal episode. conversing Binary indicator showing speaker provided conversational response referent (1 = Yes, 0 = ). labeling Binary indicator showing speaker label referent (1 = Yes, 0 = ). echoing Binary indicator showing speaker repeat referent's name (1 = Yes, 0 = ). requesting Binary indicator showing speaker request referent's name (1 = Yes, 0 = ).","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_summarized_response_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarized Response Data (Example) — df_summarized_response_example","title":"Summarized Response Data (Example) — df_summarized_response_example","text":"data set provides example summarized response data, total occurrences response type (Conversing, Labeling, Echoing, Requesting) calculated evaluation date. summary often used input plot functions analyses assess patterns response types time. summarized data can generated using `util_summarize_response` function. See `?util_summarize_response` details.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_summarized_response_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarized Response Data (Example) — df_summarized_response_example","text":"","code":"data(df_summarized_response_example)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/df_summarized_response_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summarized Response Data (Example) — df_summarized_response_example","text":"data frame 3 rows 5 variables: date_of_evaluation date evaluation conducted. conversing total count positive conversing responses given evaluation date. labeling total count positive labeling responses given evaluation date. echoing total count positive echoing responses given evaluation date. requesting total count positive requesting responses given evaluation date.","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_download_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Bar Module for Exporting Data and Reports — mod_download_bar","title":"Download Bar Module for Exporting Data and Reports — mod_download_bar","text":"Shiny module provides download interface, allowing users export data generate Word document report. module useful users needing easily accessible download bar retrieve VOX Analysis results structured formats analysis reporting.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_download_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Bar Module for Exporting Data and Reports — mod_download_bar","text":"","code":"mod_download_bar_server(   id,   df_input_speaker_info,   df_input_response,   df_summarized_response )  mod_download_bar_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_download_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Bar Module for Exporting Data and Reports — mod_download_bar","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. df_input_speaker_info `data.frame` containing general information speaker (subject VOX Analysis), provided user. example, run `data(\"df_input_speaker_info\")`. df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`. df_summarized_response `data.frame` summarizing verbal operant (Conversing, Labeling, Echoing, Requesting) given evaluation date. summary provides condensed view responses can produced using `util_summarize_response` function.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_download_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Bar Module for Exporting Data and Reports — mod_download_bar","text":"","code":"if (interactive()) {   # Load example data   data(\"df_input_speaker_info_example\")   data(\"df_input_response_example\")   data(\"df_summarized_response_example\")    # Define the UI with the download bar   ui <- page(     mod_download_bar_ui(\"download_bar\")   )    # Set up the server to include the download bar functionality   server <- function(input, output, session) {     mod_download_bar_server(       \"download_bar\",       df_input_speaker_info = df_input_speaker_info_example,       df_input_response = df_input_response_example,       df_summarized_response = df_summarized_response_example     )   }    # Run the Shiny app   shinyApp(ui, server) }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_evaluation_date_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation Date Form for Appended Entries — mod_evaluation_date_entry","title":"Evaluation Date Form for Appended Entries — mod_evaluation_date_entry","text":"Shiny module provides user interface server function allows user specify current evaluation date appending new records existing data set.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_evaluation_date_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation Date Form for Appended Entries — mod_evaluation_date_entry","text":"","code":"mod_evaluation_date_entry_server(   id,   df_input_speaker_info,   df_input_response_previous )  mod_evaluation_date_entry_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_evaluation_date_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation Date Form for Appended Entries — mod_evaluation_date_entry","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. df_input_speaker_info `data.frame` containing general information speaker (subject VOX Analysis), provided user. example, run `data(\"df_input_speaker_info\")`. df_input_response_previous `data.frame` similar `df_summarized_response` represents past evaluations uploaded end user distinguish prior assessments current ones.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_response_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Speaker Data Entry and Report Generation Module — mod_response_entry","title":"Speaker Data Entry and Report Generation Module — mod_response_entry","text":"Shiny module provides user interface server function allows users enter speaker data VOX Analysis generate corresponding report. module designed streamline data entry report generation within analysis workflow.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_response_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speaker Data Entry and Report Generation Module — mod_response_entry","text":"","code":"mod_response_entry_server(   id,   df_input_speaker_info,   df_input_response_previous = NULL )  mod_response_entry_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_response_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Speaker Data Entry and Report Generation Module — mod_response_entry","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. df_input_speaker_info `data.frame` containing general information speaker (subject VOX Analysis), provided user. example, run `data(\"df_input_speaker_info\")`. df_input_response_previous `data.frame` similar `df_summarized_response` represents past evaluations uploaded end user distinguish prior assessments current ones.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_response_entry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Speaker Data Entry and Report Generation Module — mod_response_entry","text":"","code":"if (interactive()) {   # Load example speaker information data   data(\"df_input_speaker_info_example\")    # Define the UI with data entry and report functionality   ui <- page(     useShinyjs(),     mod_response_entry_ui(\"data_entry\")   )    # Set up the server to include data entry functionality   server <- function(input, output, session) {     mod_response_entry_server(\"data_entry\", df_input_speaker_info_example)   }    # Run the Shiny app   shinyApp(ui, server) }  if (interactive()) {   # Alternative example using a pre-built app function   run_example_measurement_entry_app() }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_primary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Report Generation Module — mod_results_primary","title":"Summary Report Generation Module — mod_results_primary","text":"Shiny module provides user interface server function generate summary report based response inputs. designed work independently modules, allowing users create comprehensive summary report VOX Analysis session.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_primary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Report Generation Module — mod_results_primary","text":"","code":"mod_results_primary_server(id, df_input_speaker_info, df_input_response)  mod_results_primary_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_primary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Report Generation Module — mod_results_primary","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. df_input_speaker_info `data.frame` containing general information speaker (subject VOX Analysis), provided user. example, run `data(\"df_input_speaker_info\")`. df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_primary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Report Generation Module — mod_results_primary","text":"","code":"if (interactive()) {   # Load example data   data(\"df_input_speaker_info_example\")   data(\"df_input_response_example\")    # Define the UI with the summary report generation module   ui <- page(     mod_results_primary_ui(\"data_input\")   )    # Set up the server to include summary report functionality   server <- function(input, output, session) {     mod_results_primary_server(       \"data_input\",       df_input_speaker_info = df_input_speaker_info_example,       df_input_response = df_input_response_example     )   }    # Run the Shiny app   shinyApp(ui, server) }  if (interactive()) {   # Alternative example using a pre-built app function   run_example_results_app() }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_section_area_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Area Q Summary Section Module — mod_results_section_area_q","title":"Area Q Summary Section Module — mod_results_section_area_q","text":"Shiny module generates Area Q summary section, intended use within `mod_results_primary` module. provides focused view Area Q calculations, offering insights spatial distribution centroidal properties responses VOX Analysis session.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_section_area_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area Q Summary Section Module — mod_results_section_area_q","text":"","code":"mod_results_section_area_q_server(id, df_input_response, date_primary)  mod_results_section_area_q_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_section_area_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area Q Summary Section Module — mod_results_section_area_q","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`. date_primary single date `vector` specifying primary evaluation date. parameter essential multiple evaluation dates available, determines date prioritized calculations highlights within function.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_section_area_q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area Q Summary Section Module — mod_results_section_area_q","text":"","code":"if (interactive()) {   # Load example response data   data(\"df_input_response_example\")    # Define the UI with the Area Q summary section   ui <- page(     mod_results_section_area_q_ui(\"section_area_q\")   )    # Set up the server to include Area Q summary functionality   server <- function(input, output, session) {     mod_results_section_area_q_server(       \"section_area_q\",       df_input_response_example,       date_primary = max(df_input_response_example$date_of_evaluation)     )   }    # Run the Shiny app   shinyApp(ui, server) }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_section_detailed_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Detailed Analysis Section Module — mod_results_section_detailed_analysis","title":"Detailed Analysis Section Module — mod_results_section_detailed_analysis","text":"Shiny module generates detailed analysis section VOX Analysis, designed used within `mod_results_primary` module. provides comprehensive view speaker's responses generating multiple components: Vox pie chart: Visualizes distribution different response types. Vox line chart: Shows trends responses time. Cochran's Q test: Performs statistical test assess consistency across responses. Prompt hierarchy table: Displays structured view response prompts hierarchy.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_section_detailed_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detailed Analysis Section Module — mod_results_section_detailed_analysis","text":"","code":"mod_results_section_detailed_analysis_server(id, df_input_response)  mod_results_section_detailed_analysis_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_section_detailed_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detailed Analysis Section Module — mod_results_section_detailed_analysis","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_results_section_detailed_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detailed Analysis Section Module — mod_results_section_detailed_analysis","text":"","code":"if (interactive()) {   # Load example data   data(\"df_input_response_example\")    # Define the UI with the detailed analysis section   ui <- page(     mod_results_section_detailed_analysis_ui(\"detailed_analysis\")   )    # Set up the server to include detailed analysis functionality   server <- function(input, output, session) {     mod_results_section_detailed_analysis_server(       \"detailed_analysis\",       df_input_response = df_input_response_example     )   }    # Run the Shiny app   shinyApp(ui, server) }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_speaker_data_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Speaker Data Entry Module — mod_speaker_data_entry","title":"Speaker Data Entry Module — mod_speaker_data_entry","text":"Shiny module provides user interface entering speaker data, triggering data entry prompt followed report output. can used collect speaker information VOX Analysis.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_speaker_data_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speaker Data Entry Module — mod_speaker_data_entry","text":"","code":"mod_speaker_data_entry_server(id)  mod_speaker_data_entry_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_speaker_data_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Speaker Data Entry Module — mod_speaker_data_entry","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_speaker_data_entry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Speaker Data Entry Module — mod_speaker_data_entry","text":"","code":"if (interactive()) {   # Basic usage example   ui <- page(     useShinyjs(),     mod_speaker_data_entry_ui(\"speaker_entry\")   )    server <- function(input, output, session) {     mod_speaker_data_entry_server(\"speaker_entry\")   }    shinyApp(ui, server) }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_speaker_data_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Speaker Data Viewing and Modification Module — mod_speaker_data_info","title":"Speaker Data Viewing and Modification Module — mod_speaker_data_info","text":"Shiny module provides interface users view modify speaker data VOX Analysis.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_speaker_data_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speaker Data Viewing and Modification Module — mod_speaker_data_info","text":"","code":"mod_speaker_data_info_server(id, df_input_speaker_info)  mod_speaker_data_info_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_speaker_data_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Speaker Data Viewing and Modification Module — mod_speaker_data_info","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. df_input_speaker_info `data.frame` containing general information speaker (subject VOX Analysis), provided user. example, run `data(\"df_input_speaker_info\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_speaker_data_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Speaker Data Viewing and Modification Module — mod_speaker_data_info","text":"","code":"if (interactive()) {   # Load example speaker information data   data(\"df_input_speaker_info_example\")    # Define the UI with speaker data viewing and modification capabilities   ui <- page(     useShinyjs(),     mod_speaker_data_info_ui(\"speaker\")   )    # Set up the server with initial speaker data   server <- function(input, output, session) {     mod_speaker_data_info_server(\"speaker\", df_input_speaker_info_example)   }    # Run the Shiny app   shinyApp(ui, server) }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_starting_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Application Home Page Module — mod_starting_page","title":"Application Home Page Module — mod_starting_page","text":"Shiny module defines home page VOX Analysis application, serving main entry point users. contains primary layout navigation elements accessing various sections app.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_starting_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application Home Page Module — mod_starting_page","text":"","code":"mod_starting_page_server(id)  mod_starting_page_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_starting_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Application Home Page Module — mod_starting_page","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_starting_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Application Home Page Module — mod_starting_page","text":"","code":"if (interactive()) {   # Define the UI with the application's home page   ui <- page(     useShinyjs(),     mod_starting_page_ui(\"home_page\")   )    # Set up the server for the home page module   server <- function(input, output, session) {     mod_starting_page_server(\"home_page\")   }    # Run the Shiny app   shinyApp(ui, server) }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_upload_data_set.html","id":null,"dir":"Reference","previous_headings":"","what":"CSV File Upload Module for Speaker Data — mod_upload_data_set","title":"CSV File Upload Module for Speaker Data — mod_upload_data_set","text":"Shiny module provides user interface uploading `.csv` file containing speaker data VOX Analysis. enables users import external data analysis, options modify speaker data","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_upload_data_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CSV File Upload Module for Speaker Data — mod_upload_data_set","text":"","code":"mod_upload_data_set_server(id, ind_add_new_data = FALSE)  mod_upload_data_set_ui(id)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_upload_data_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CSV File Upload Module for Speaker Data — mod_upload_data_set","text":"id namespace `id`, used uniquely identify Shiny modules UI components within VOX Analysis package. ind_add_new_data Logical (`TRUE` `FALSE`): Indicates whether user intends manually enter new data. Setting `TRUE` triggers inclusion `mod_speaker_data_entry` module, enabling manual data entry user.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/mod_upload_data_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CSV File Upload Module for Speaker Data — mod_upload_data_set","text":"","code":"if (interactive()) {   # Load example speaker data    # Define the UI with the file upload module   ui <- page(     useShinyjs(),     mod_upload_data_set_ui(\"upload\")   )    # Set up the server to handle file uploads   server <- function(input, output, session) {     mod_upload_data_set_server(       \"upload\",       ind_add_new_data = TRUE     )   }    # Run the Shiny app   shinyApp(ui, server) }  # Alternative: Run a pre-configured example app for file upload if (interactive()) {   run_example_upload_data_set_app(ind_add_new_data = TRUE) }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_area_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Area Q Plot — plot_area_q","title":"Area Q Plot — plot_area_q","text":"function generates Area Q plot visualize response types (e.g., Conversing, Labeling, Echoing, Requesting) VOX Analysis. plot can display data single evaluation (e.g., play therapy session) compare multiple evaluations time reveal changes language development patterns. flexibility allows users analyze individual sessions observe trends across multiple sessions.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_area_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area Q Plot — plot_area_q","text":"","code":"plot_area_q(df_summarized_response, date_primary, ind_doc_version = FALSE)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_area_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area Q Plot — plot_area_q","text":"df_summarized_response `data.frame` summarizing verbal operant (Conversing, Labeling, Echoing, Requesting) given evaluation date. summary provides condensed view responses can produced using `util_summarize_response` function. date_primary single date `vector` specifying primary evaluation date. parameter essential multiple evaluation dates available, determines date prioritized calculations highlights within function. ind_doc_version Logical (`TRUE` `FALSE`): Indicates whether plot needs optimized inclusion Word document. `TRUE`, font sizes aesthetics adjusted enhance Word document readability.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_area_q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area Q Plot — plot_area_q","text":"","code":"# Load example data data(\"df_summarized_response_example\")  # Generate an Area Q plot for selected dates plot_area_q(   df_summarized_response = df_summarized_response_example[1:2, ],   date_primary = \"2024-08-23\" )"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_color_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Map for Response Type Charts — plot_color_mapping","title":"Color Map for Response Type Charts — plot_color_mapping","text":"predefined set hexadecimal color codes use VOX Analysis charts, mapped specific response types (Conversing, Labeling, Echoing, Requesting). color map ensures consistent visually distinguishable colors across charts, enhancing interpretability.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_color_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Map for Response Type Charts — plot_color_mapping","text":"","code":"plot_color_mapping"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_color_mapping.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color Map for Response Type Charts — plot_color_mapping","text":"object class character length 4.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_vox_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a VOX Line Chart — plot_vox_line","title":"Plot a VOX Line Chart — plot_vox_line","text":"function generates VOX line chart, visualizing response trends (e.g., Conversing, Labeling, Echoing, Requesting) across verbal episodes VOX Analysis evaluation.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_vox_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a VOX Line Chart — plot_vox_line","text":"","code":"plot_vox_line(   df_input_response,   ind_hide_heading = TRUE,   ind_doc_version = FALSE )"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_vox_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a VOX Line Chart — plot_vox_line","text":"df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`. ind_hide_heading Logical. `TRUE`, hides heading chart. Defaults `TRUE`. ind_doc_version Logical (`TRUE` `FALSE`): Indicates whether plot needs optimized inclusion Word document. `TRUE`, font sizes aesthetics adjusted enhance Word document readability.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_vox_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a VOX Line Chart — plot_vox_line","text":"","code":"# Load example data data(\"df_input_response_example\")  # Generate a VOX line chart across verbal episodes plot_vox_line(df_input_response = df_input_response_example)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_vox_piechart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a VOX Pie Chart — plot_vox_piechart","title":"Plot a VOX Pie Chart — plot_vox_piechart","text":"function generates VOX pie chart visualizes distribution response types (Conversing, Labeling, Echoing, Requesting) single evaluation date.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_vox_piechart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a VOX Pie Chart — plot_vox_piechart","text":"","code":"plot_vox_piechart(df_summarized_response, ind_doc_version = FALSE)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_vox_piechart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a VOX Pie Chart — plot_vox_piechart","text":"df_summarized_response `data.frame` summarizing verbal operant (Conversing, Labeling, Echoing, Requesting) given evaluation date. summary provides condensed view responses can produced using `util_summarize_response` function. ind_doc_version Logical. `TRUE`, adjusts font sizes Word document compatibility. Defaults `FALSE`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/plot_vox_piechart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a VOX Pie Chart — plot_vox_piechart","text":"","code":"# Load example data library(dplyr) data(\"df_summarized_response_example\")  # Filter to a single evaluation date, as the pie chart works with one date at a time dat <- df_summarized_response_example %>%     filter(date_of_evaluation == max(date_of_evaluation))  # Generate the VOX pie chart plot_vox_piechart(df_summarized_response = dat)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/run_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Functions to Demonstrate Application and Module Combinations — run_example","title":"Helper Functions to Demonstrate Application and Module Combinations — run_example","text":"set helper functions allows users easily run test various combinations VOX Analysis applications modules. function includes example data, providing straightforward way demonstrate different functionalities without requiring additional setup.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/run_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Functions to Demonstrate Application and Module Combinations — run_example","text":"","code":"run_example_results_app()  run_example_response_entry_app()  run_example_upload_data_set_app(ind_add_new_data = TRUE)  run_example_speaker_data_entry_app()"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/run_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Functions to Demonstrate Application and Module Combinations — run_example","text":"ind_add_new_data Logical (`TRUE` `FALSE`): Indicates whether user intends manually enter new data. Setting `TRUE` triggers inclusion `mod_speaker_data_entry` module, enabling manual data entry user.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/run_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Functions to Demonstrate Application and Module Combinations — run_example","text":"","code":"# Run the results page application if (interactive()) {   run_example_results_app() }  # Run the response input page application if (interactive()) {   run_example_response_entry_app() }  # Run the upload data page application # Set ind_add_new_data = TRUE to include the response entry page if (interactive()) {   run_example_upload_data_set_app(ind_add_new_data = FALSE) }  # Run the speaker data entry application if (interactive()) {   run_example_speaker_data_entry_app() }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/table_cochrans_q_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Summary Table with Cochran's Q Test and Supporting Statistics — table_cochrans_q_test","title":"Create Summary Table with Cochran's Q Test and Supporting Statistics — table_cochrans_q_test","text":"function generates `data.frame` containing results Cochran's Q test, chance-corrected R, corresponding p-values. resulting table intended integration VOX analysis application.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/table_cochrans_q_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Summary Table with Cochran's Q Test and Supporting Statistics — table_cochrans_q_test","text":"","code":"table_cochrans_q_test(df_input_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/table_cochrans_q_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Summary Table with Cochran's Q Test and Supporting Statistics — table_cochrans_q_test","text":"df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/table_cochrans_q_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Summary Table with Cochran's Q Test and Supporting Statistics — table_cochrans_q_test","text":"","code":"# Load example response data data(\"df_input_response_example\")  # Generate a summary table with Cochran's Q test and supporting statistics table_cochrans_q_test(df_input_response = df_input_response_example) #>                label  value #> 1        Cochran's Q 7.5000 #> 2 Chance-corrected R 0.1875 #> 3            P-value 0.0600"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/table_prompt_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Prompt Hierarchy Table — table_prompt_hierarchy","title":"Prompt Hierarchy Table — table_prompt_hierarchy","text":"function generates `data.frame` representing prompt hierarchy, outlines structured intervention steps speaker expected follow VOX Analysis. hierarchy helps assess progression responses, providing insights prompts followed adjusted based speaker's responses. table accepts one unique evaluation date time.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/table_prompt_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prompt Hierarchy Table — table_prompt_hierarchy","text":"","code":"table_prompt_hierarchy(df_summarized_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/table_prompt_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prompt Hierarchy Table — table_prompt_hierarchy","text":"df_summarized_response `data.frame` summarizing verbal operant (Conversing, Labeling, Echoing, Requesting) given evaluation date. summary provides condensed view responses can produced using `util_summarize_response` function.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/table_prompt_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prompt Hierarchy Table — table_prompt_hierarchy","text":"","code":"# Load example data library(dplyr) data(\"df_summarized_response_example\")  # Filter to a single evaluation date, as the table works with one date at a time dat <- df_summarized_response_example %>%     filter(date_of_evaluation == max(date_of_evaluation))  # Generate the prompt hierarchy table table_prompt_hierarchy(df_summarized_response = dat) #> # A tibble: 14 × 5 #>    Percent Conversing Labeling Echoing Requesting #>      <dbl> <chr>      <chr>    <chr>   <chr>      #>  1   100   CELR       LERC     ELRC    RELC       #>  2    91.7 -          LER      ELR     REL        #>  3    83.3 CEL        LEC      ELC     -          #>  4    75   -          LE       EL      -          #>  5    66.7 CER        -        ERC     REC        #>  6    58.4 -          -        ER      RE         #>  7    58.3 CLR        LRC      -       RLC        #>  8    50   CE         LR       EC      RL         #>  9    41.7 -          -        E       -          #> 10    41.6 CL         LC       -       -          #> 11    33.3 -          L        -       -          #> 12    25   CR         -        -       RC         #> 13    16.7 -          -        -       R          #> 14     8.3 C          -        -       -"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_file_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom File Upload Control — tag_custom_file_upload","title":"Custom File Upload Control — tag_custom_file_upload","text":"Create file upload control can used upload one files.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_file_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom File Upload Control — tag_custom_file_upload","text":"","code":"tag_custom_file_upload(   inputId,   multiple = FALSE,   accept = NULL,   buttonLabel = \"Browse...\",   placeholder = \"No file selected\",   ... )"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_file_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom File Upload Control — tag_custom_file_upload","text":"inputId input slot used access value. multiple Whether user allowed select upload multiple files . work older browsers, including Internet Explorer 9 earlier. accept character vector \"unique file type specifiers\" gives browser hint type file server expects. Many browsers use prevent user selecting invalid file. unique file type specifier can : case insensitive extension like .csv .rds. valid MIME type, like text/plain application/pdf One audio/*, video/*, image/* meaning audio, video, image type, respectively. buttonLabel label used button. Can text HTML tag object. placeholder text show file uploaded. ... Arguments passed shiny::fileInput label Display label control, NULL label. width width input, e.g. '400px', '100%'; see validateCssUnit(). capture source use capturing image, audio video data. attribute facilitates user access device's media capture mechanism, camera, microphone, within file upload control. value user indicates user-facing camera /microphone used. value environment specifies outward-facing camera /microphone used. default phones, accept still photos video. still photos , also use accept=\"image/*\". video , use accept=\"video/*\".","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_file_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom File Upload Control — tag_custom_file_upload","text":"UI element file upload, similar `shiny::fileInput`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_file_upload.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Custom File Upload Control — tag_custom_file_upload","text":"modified `shiny::fileInput` make format consistent VOX Analysis user-interface.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Numeric Input for Borderless Data Entry — tag_custom_input","title":"Custom Numeric Input for Borderless Data Entry — tag_custom_input","text":"function creates custom numeric input field, similar `shiny::textInput`, borderless design / arrows. used `tag_table_response_inputs` facilitate smooth, minimalistic numeric input VOX Analysis language assessment app.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Numeric Input for Borderless Data Entry — tag_custom_input","text":"","code":"tag_custom_input(   input_id,   value = 0,   align_center = TRUE,   placeholder = \"Enter 1 or 0\" )"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Numeric Input for Borderless Data Entry — tag_custom_input","text":"input_id unique identifier input element. value numeric value displayed default input. align_center Logical. `TRUE`, centers input alignment. Defaults `FALSE`. placeholder character string display placeholder text input empty.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_custom_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Numeric Input for Borderless Data Entry — tag_custom_input","text":"custom, borderless numeric input UI element without numeric increment arrows.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_kpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a KPI Taglist — tag_kpi","title":"Create a KPI Taglist — tag_kpi","text":"function generates KPI (Key Performance Indicator) taglist, displaying header KPI value minimalistic format. taglist designed VOX Analysis app prominently display metrics clean layout, making suitable dashboard-style reporting.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_kpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a KPI Taglist — tag_kpi","text":"","code":"tag_kpi(metric, header)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_kpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a KPI Taglist — tag_kpi","text":"metric single numeric character value representing metric display. header character string containing header description KPI.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_kpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a KPI Taglist — tag_kpi","text":"Shiny `tagList` containing KPI header corresponding metric value, formatted display.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_speaker_input_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Namespaced Speaker Input Form — tag_speaker_input_form","title":"Generate Namespaced Speaker Input Form — tag_speaker_input_form","text":"function creates tag list input fields namespaced IDs. IDs dynamically generated based provided namespace prefix, allowing inputs used within Shiny module application consistent naming structure.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_speaker_input_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Namespaced Speaker Input Form — tag_speaker_input_form","text":"","code":"tag_speaker_input_form(ns_prefix, ind_evaluation_date = TRUE)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_speaker_input_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Namespaced Speaker Input Form — tag_speaker_input_form","text":"ns_prefix character string representing namespace prefix applied input field's ID.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_speaker_input_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Namespaced Speaker Input Form — tag_speaker_input_form","text":"tagList containing multiple Shiny input elements namespaced IDs, including: first_name: required text input speaker's first name. last_name: required text input speaker's last name. date_of_birth: required date input speaker's date birth. date_of_evaluation: required date input speaker's date evaluation. language_spoken: optional text input speaker's language spoken. gender: optional text input speaker's gender. required field indicated asterisk, noted form text.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_spinner.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Spinner to a UI Element — tag_spinner","title":"Add a Spinner to a UI Element — tag_spinner","text":"Wraps Shiny UI element spinner indicate loading processing activity.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_spinner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Spinner to a UI Element — tag_spinner","text":"","code":"tag_spinner(tag_to_pass, color = \"#cce5f3\")"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_spinner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Spinner to a UI Element — tag_spinner","text":"tag_to_pass Shiny UI element wrap spinner. Required. color character string specifying spinner color hexadecimal format. Default `\"#cce5f3\"`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_spinner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Spinner to a UI Element — tag_spinner","text":"UI element wrapped spinner.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_spinner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Spinner to a UI Element — tag_spinner","text":"","code":"if (FALSE) { # \\dontrun{ tag_spinner(shiny::textOutput(\"output_id\")) } # }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_prompt_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom HTML Table to Report Prompt Hierarchy — tag_table_prompt_hierarchy","title":"Custom HTML Table to Report Prompt Hierarchy — tag_table_prompt_hierarchy","text":"function creates custom HTML table display prompt hierarchy results page VOX Analysis application. provides structured, read-view hierarchy, generated based intervention steps speaker.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_prompt_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom HTML Table to Report Prompt Hierarchy — tag_table_prompt_hierarchy","text":"","code":"tag_table_prompt_hierarchy(table_prompt_hierarchy)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_prompt_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom HTML Table to Report Prompt Hierarchy — tag_table_prompt_hierarchy","text":"table_prompt_hierarchy `data.frame` generated `table_prompt_hierarchy`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_prompt_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom HTML Table to Report Prompt Hierarchy — tag_table_prompt_hierarchy","text":"HTML table displaying prompt hierarchy static format reporting purposes.","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_response_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom HTML Table for Response Data Entry — tag_table_response_input","title":"Custom HTML Table for Response Data Entry — tag_table_response_input","text":"function generates custom HTML table editable fields, allowing users enter responses directly table. uses `tag_custom_input` along various HTML tags CSS classes create seamless data entry experience. Data entered table accessible server side via `input` object, enabling real-time data capture within Shiny session.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_response_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom HTML Table for Response Data Entry — tag_table_response_input","text":"","code":"tag_table_response_input(ns_prefix, row_count)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_response_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom HTML Table for Response Data Entry — tag_table_response_input","text":"ns_prefix namespace prefix. Pass `session$ns(id)` ensure user inputs accessible module via `input`. row_count number rows include table.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_response_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom HTML Table for Response Data Entry — tag_table_response_input","text":"HTML table custom input fields cell, styled data entry Shiny applications.","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_response_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom HTML Table for Reporting Responses — tag_table_response_results","title":"Custom HTML Table for Reporting Responses — tag_table_response_results","text":"function creates custom HTML table display response data static, non-interactive format. Unlike `tag_table_response_input`, table intended data entry modification user Shiny session. provides read-view, ideal reporting summarizing response data within VOX Analysis application.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_response_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom HTML Table for Reporting Responses — tag_table_response_results","text":"","code":"tag_table_response_results(df_input_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_response_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom HTML Table for Reporting Responses — tag_table_response_results","text":"df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/tag_table_response_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom HTML Table for Reporting Responses — tag_table_response_results","text":"HTML table displaying response data static format.","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_check_data_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Check for `df_input_response` — util_check_data_upload","title":"Quality Check for `df_input_response` — util_check_data_upload","text":"function performs quality check ensure `df_input_response` conforms expected data model. particularly useful validating data uploaded users via `mod_upload_data_set` module, helping maintain data consistency integrity within VOX Analysis app. function returns either `\"Good\"` `\"Bad\"` indicate quality status, providing clear, unambiguous result.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_check_data_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality Check for `df_input_response` — util_check_data_upload","text":"","code":"util_check_data_upload(df_input_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_check_data_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality Check for `df_input_response` — util_check_data_upload","text":"df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_check_data_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality Check for `df_input_response` — util_check_data_upload","text":"character string, either `\"Good\"` data passes quality check, `\"Bad\"` .","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_check_data_upload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quality Check for `df_input_response` — util_check_data_upload","text":"","code":"# Load example data for quality checking data(\"df_input_response_example\")  # Perform a quality check on the data util_check_data_upload(df_input_response = df_input_response_example) #> [1] \"Good\""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_download_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Handlers for Generating .csv and Word Exports — util_download_handler","title":"Download Handlers for Generating .csv and Word Exports — util_download_handler","text":"functions provide download handlers exporting data `.csv` Word document formats: `util_download_handler_word`: Generates Word version results page, formatted reporting easy sharing VOX Analysis outputs. `util_download_handler_dataset`: Creates `.csv` file containing input data provided user, allowing quick data export analysis. functions pass parameters `downloadHandler`, enabling customization file output within VOX Analysis app.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_download_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Handlers for Generating .csv and Word Exports — util_download_handler","text":"","code":"util_download_handler_dataset(df_input_speaker_info, df_input_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_download_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Handlers for Generating .csv and Word Exports — util_download_handler","text":"df_input_speaker_info `data.frame` containing general information speaker (subject VOX Analysis), provided user. example, run `data(\"df_input_speaker_info\")`. df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_generate_word_doc_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Word Document Report — util_generate_word_doc_report","title":"Render Word Document Report — util_generate_word_doc_report","text":"function generates Word document report using `printable_report.qmd` template found `inst` folder package. report provides formatted summary VOX Analysis data, making suitable sharing documentation purposes.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_generate_word_doc_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Word Document Report — util_generate_word_doc_report","text":"","code":"util_generate_word_doc_report(   df_input_speaker_info = NULL,   df_input_response,   file_name )"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_generate_word_doc_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Word Document Report — util_generate_word_doc_report","text":"df_input_speaker_info `data.frame` containing general information speaker (subject VOX Analysis), provided user. example, run `data(\"df_input_speaker_info\")`. df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`. file_name character string specifying name exported file, including `.docx` extension.","code":""},{"path":[]},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_generate_word_doc_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render Word Document Report — util_generate_word_doc_report","text":"","code":"if (FALSE) { # \\dontrun{ # Load example data for report generation data(\"df_input_speaker_info_example\") data(\"df_input_response_example\")  # Generate a Word document report util_generate_word_doc_report(   df_input_speaker_info = df_input_speaker_info_example,   df_input_response = df_input_response_example,   file_name = \"text.docx\" ) } # }"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_shiny_remove_and_hide_flex.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Flex Classes for Compatibility with `shinyjs::hide()` — util_shiny_remove_and_hide_flex","title":"Remove Flex Classes for Compatibility with `shinyjs::hide()` — util_shiny_remove_and_hide_flex","text":"HTML tag `d-flex flex-fill` classes applied, can interfere functionality `shinyjs::hide()`. utility function removes classes specified tag, ensuring `shinyjs::hide()` works expected hide element.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_shiny_remove_and_hide_flex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Flex Classes for Compatibility with `shinyjs::hide()` — util_shiny_remove_and_hide_flex","text":"","code":"util_shiny_remove_and_hide_flex(inputId)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_shiny_remove_and_hide_flex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Flex Classes for Compatibility with `shinyjs::hide()` — util_shiny_remove_and_hide_flex","text":"inputId ID HTML tag modify hide.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_summarize_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Responses by Type — util_summarize_response","title":"Summarize Responses by Type — util_summarize_response","text":"utility function aggregates responses type (e.g., Conversing, Labeling, Echoing, Requesting) within VOX Analysis application. calculates total count response type, providing summary can used analysis visualization.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_summarize_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Responses by Type — util_summarize_response","text":"","code":"util_summarize_response(df_input_response)"},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_summarize_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Responses by Type — util_summarize_response","text":"df_input_response `data.frame` containing referent names associated responses, typically recorded listener. example data, run `data(\"df_input_response_example\")` `data(\"df_input_response_previous_example\")`.","code":""},{"path":"https://free-state-analytics.github.io/voxanalysis/reference/util_summarize_response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Responses by Type — util_summarize_response","text":"","code":"# Load example data data(\"df_input_response_example\")  # Summarize responses by type util_summarize_response(   df_input_response = df_input_response_example ) #> # A tibble: 1 × 5 #>   date_of_evaluation labeling echoing requesting conversing #>   <date>                <dbl>   <dbl>      <dbl>      <dbl> #> 1 2024-08-23                4       5          2          1"},{"path":"https://free-state-analytics.github.io/voxanalysis/news/index.html","id":"voxanalysis-development-version","dir":"Changelog","previous_headings":"","what":"voxanalysis (development version)","title":"voxanalysis (development version)","text":"Initial CRAN submission.","code":""}]
